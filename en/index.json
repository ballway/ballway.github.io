[{"content":"The English content is not completely ready.\nPictures Author: Michael\nLastMod: 2023-12-12\nLicense: All rights reserved\n","permalink":"https://ballway.github.io/en/posts/business/adivce-about-atcc-case-competition/","summary":"The English content is not completely ready.","title":"Adivce about ATCC Case Competition"},{"content":"When encountering False on the left side, the right side will not be evaluated.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 bool SecondOperand() { Console.WriteLine(\u0026#34;Second operand is evaluated.\u0026#34;); return true; } bool a = false \u0026amp;\u0026amp; SecondOperand(); Console.WriteLine(a); // Output: // False bool b = true \u0026amp;\u0026amp; SecondOperand(); Console.WriteLine(b); // Output: // Second operand is evaluated. // True Referenceï¼š\nBoolean Logical Operators:AND, OR, NOT, XOR Author: Michael\nLastMod: 2023-12-12\nLicense: All rights reserved\n","permalink":"https://ballway.github.io/en/posts/tech/csharp-boolean-logical-operators-and/","summary":"About C# Boolean Logical Operators: \u0026amp;\u0026amp;","title":"About C# Boolean Logical Operators: \u0026\u0026"},{"content":"I\u0026rsquo;ve organized my concepts about the UTF-8 BOM encoding format:\nIf you are going to include non-alphanumeric content (such as comments or inserts) in your SQL script, UTF-8 encoding would be suitable. UTF-8 BOM adds a header to UTF-8, providing an extra marker in the file. This marker allows text editors to recognize whether the file is encoded as UTF-8, UTF-16, or UTF-32. Without the BOM, a text editor has to scan the content upon opening a file to guess its encoding. However, the result of this guesswork may not always be accurate. Therefore, choosing UTF8-BOM directly eliminates the risk of the editor guessing incorrectly. Author: Michael\nLastMod: 2023-12-12\nLicense: All rights reserved\n","permalink":"https://ballway.github.io/en/posts/tech/the-use-case-of-utf-8-bom/","summary":"I\u0026rsquo;ve organized my concepts about the UTF-8 BOM encoding format","title":"The Use Case of UTF-8 BOM"},{"content":"I\u0026rsquo;ve organized the basic concepts about encryption, hashing, and signature:\nEncryption and Decryption\nReversible process Divided into two modes Asymmetric: Two types of keys for encryption and decryption Public: Key used during encryption Private: Key used during decryption Symmetric: Key used for encryption equals the key used for decryption Symmetric encryption algorithm: AES 128 and above Hashing\nIrreversible (one-way) process; finding the original string from the hash is only possible through table lookup (some individuals compile tables of hash mappings online) The result of hashing is consistent each time, unless a \u0026ldquo;salt\u0026rdquo; is added Multiple algorithms are available, but those prone to collisions are deprecated md5 SHA1 SHA256 SHA512 Signature\nMethod used to verify if content has been tampered with, usually utilizing asymmetric structures During signing, a private key is used to create a signature value for the content During verification, a public key is used to verify the content and signature value, ensuring the content has not been tampered with. Author: Michael\nLastMod: 2023-12-12\nLicense: All rights reserved\n","permalink":"https://ballway.github.io/en/posts/tech/encryption-hash-signature-note/","summary":"I\u0026rsquo;ve organized the basic concepts about encryption, hashing, and signature","title":"Learning Notes: Encryption, Hashing, and Signature"}]